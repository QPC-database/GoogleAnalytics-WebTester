extends base

block variables
	- var pageTitle = "Social Interactions Code Samples"
	- var pageDescription = "Implementation guide including code samples to validate tracking of Google Analytics Social Interactions using Google Analytics Web Tester."
	- var pageSubtitle = ""
	- var pageHeader = "Tracking Social Interactions"
	- var pageName = "Social Interactions"
	- var pageUrl = "examples-social-interactions.html"

block content
	p To validate tracking of Social Interactions, use the following Array in your Jasmine expectations:

	pre
		code(class="javascript")
			|['send', 'social', { ────────────────────> 1&2. (Standard Google Analytics parameters)
			|    'socialNetwork': 'Facebook', ─────────> 3. Social Interaction Network
			|    'socialAction': 'Like', ──────────────> 4. Social Interaction Action
			|    'socialTarget': 'http://test.com' ────> 5. Social Interaction Target (URL)
			|}]

	p Using direct <code>ga()</code> calls, checking proper tracking of Social Interactions could be done in the following manner:

	pre
		code(class="javascript").
			describe('The Google Analytics "Social Interactions" tracking', function () {
			   beforeEach(function () {
			      // Load the page to test:
			      browser.get('index.html');
			
			      // Register the Google Analytics Event Data Interceptor:
			      browser.driver.registerGoogleAnalyticsEventDataInterceptor();
			   });
			 
			   it('should fire a Social Interaction when clicking on the "Facebook Like" button', function (done) {
			      // Click on the "Facebook Like" Button:
			      element( by.css('#facebookLike') ).click();
			 
			      // Get the "LastEvent" object back from the browser:
			      browser.driver.executeScript(function () {
			         return window.GAWebTester.getLastEvent();
			      })
			      .then(
			         // Validate the content of the "LastData" object:
			         function successCallback (LastData) {
			            expect( LastData ).toEqual( ['send', 'social', {
			               'socialNetwork': 'Facebook',
			               'socialAction': 'Like',
			               'socialTarget': 'http://example.com'
			            }] );
			         },
			         // If there was an error getting back the "LastData" object from the browser, fail the test:
			         function errorCallback (error) {
			            fail('Should not have received Error: ' + JSON.stringify(error));
			         }
			      )
			      .then(done);
			   });
			});
