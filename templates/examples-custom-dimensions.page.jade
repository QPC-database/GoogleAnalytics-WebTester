extends base

block variables
	- var pageTitle = "Custom Dimensions"
	- var pageDescription = "Implementation detail about Google Analytics Custom Dimensions for GA Web Tester."
	- var pageSubtitle = ""
	- var pageHeader = "Tracking Custom Dimensions"
	- var pageName = "Custom Dimensions"
	- var pageStatus = ""
	- var pageUrl = "examples-custom-dimensions.html"

block content
	p To validate tracking of Custom Dimensions, use the following Array in your Jasmine expectations:

	pre
		code.
			['set', 'dimension1', 'Visitor']
			  │      │             └─────────────────> 3. Dimension Value
			  │      └───────────────────────────────> 2. Dimension Index
			  └──────────────────────────────────────> 1. (Standard Google Analytics parameter)

	p Using direct <code>ga()</code> calls, checking proper tracking of Metrics could be done in the following manner:

	pre
		code.
			describe('The Google Analytics "Dimension" tracking', function () {
			   beforeEach(function () {
			      // Load the page to test:
			      browser.get('index.html');
			
			      // Register the Google Analytics Event Data Interceptor:
			      browser.driver.registerGoogleAnalyticsEventDataInterceptor();
			   });
			 
			   it('should fire a Dimension when clicking on the Jumbotron CTA', function (done) {
			      // Click on the "Jumbotron" CTA:
			      element( by.css('#jumbotronCTA') ).click();
			 
			      // Get the "LastEvent" object back from the browser:
			      browser.driver.executeScript(function () {
			         return window.GAWebTester.getLastEvent();
			      })
			      .then(
			         // Validate the content of the "LastData" object:
			         function successCallback (LastData) {
			            expect( LastData ).toEqual( ['set', 'dimension1', 'Visitor'] );
			         },
			         // If there was an error getting back the "LastData" object from the browser, fail the test:
			         function errorCallback (error) {
			            fail('Should not have received Error: ' + JSON.stringify(error));
			         }
			      )
			      .then(done);
			   });
			});
