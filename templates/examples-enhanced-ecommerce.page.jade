extends base

block variables
	- var pageTitle = "Enhanced E-Commerce"
	- var pageDescription = "Implementation guide including code samples to validate tracking of Google Analytics Enhanced E-Commerce using Google Analytics Web Tester."
	- var pageSubtitle = ""
	- var pageHeader = "Tracking Enhanced E-Commerce"
	- var pageName = "Enhanced E-Commerce"
	- var pageStatus = ""
	- var pageUrl = "examples-enhanced-ecommerce.html"

block content
	p To validate tracking of Enhanced E-Commerce actions, use the following Array in your Jasmine expectations:

	pre
		code(class="javascript")
			|['ec:addProduct', { ─────────────────────> 1. (Standard Google Analytics parameters)
			|    'id': 'P12345', ──────────────────────> 2. Product ID
			|    'name': 'Android Warhol T-Shirt', ────> 3. Product Name
			|    'category': 'Apparel', ───────────────> 4. Product Category
			|    'brand': 'Google', ───────────────────> 5. Product Brand
			|    'variant': 'black', ──────────────────> 6. Product Variant
			|    'price': '29.20', ────────────────────> 7. Product Price
			|    'quantity': 1   ──────────────────────> 8. Product quantity
			|}]
			| 
			|['ec:setAction', 'checkout', { ──────────> 1&2. (Standard Google Analytics parameters)
			|    'step': 1, ───────────────────────────> 3. Checkout Step
			|    'option': 'MasterCard' ───────────────> 4. Checkout Option
			|}]

	p Using direct <code>ga()</code> calls, checking proper tracking of Enhanced E-Commerce actions could be done in the following manner:

	pre
		code(class="javascript").
			describe('The Google Analytics "Enhanced E-Commerce" tracking', function () {
			   beforeEach(function () {
			      // Load the page to test:
			      browser.get('index.html');
			
			      // Register the Google Analytics Event Data Interceptor:
			      browser.driver.registerGoogleAnalyticsEventDataInterceptor();
			   });
			 
			   it('should fire a "setAction" event when proceeding to the Step #1 of the Checkout process', function (done) {
			      // Get the "LastEvent" object back from the browser:
			      browser.driver.executeScript(function () {
			         return window.GAWebTester.getLastEvent();
			      })
			      .then(
			         // Validate the content of the "LastData" object:
			         function successCallback (LastData) {
			            expect( LastData ).toEqual( ['ec:setAction', 'checkout', {
			               'step': 1,
			               'option': 'MasterCard'
			            }] );
			         },
			         // If there was an error getting back the "LastData" object from the browser, fail the test:
			         function errorCallback (error) {
			            fail('Should not have received Error: ' + JSON.stringify(error));
			         }
			      )
			      .then(done);
			   });
			});
